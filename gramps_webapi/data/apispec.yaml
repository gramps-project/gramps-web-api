swagger: "2.0"
info:
  title: "Gramps Web API"
  description: >
    The Gramps Web API is a REST API that provides access to family tree databases generated and maintained with Gramps, a popular Open Source genealogical research software package.

    * The Gramps Web API project is hosted at https://github.com/gramps-project/web-api

    * More about Gramps and the numerous features it provides for genealogists can be found at https://gramps-project.org
  version: "0.0.1"
  license:
    name: "GNU GPL v2.0"
    url: "http://www.gnu.org/licenses/old-licenses/gpl-2.0.html"
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

tags:
- name: authentication
  description: Authentication endpoints.
- name: person
  description: Person endpoint.
- name: family
  description: Family endpoint.
- name: event
  description: Event endpoint.
- name: place
  description: Place endpoint.
- name: citation
  description: Citation endpoint.
- name: source
  description: Source endpoint.
- name: repository
  description: Repository endpoint.
- name: media
  description: Media endpoint.
- name: note
  description: Note endpoint.
- name: tag
  description: Tag endpoint.
- name: bookmark
  description: Bookmark endpoint.
- name: translate
  description: Translate endpoint.
- name: relation
  description: Relation endpoint.
- name: type
  description: Type endpoint.
- name: metadata
  description: Metadata endpoint.

paths:

##############################################################################
# ENDPOINT - Login
##############################################################################

  /login:
    post:
      tags:
      - authentication
      summary: "Authenticate a user to obtain a pair of JWT access tokens."
      operationId: login
      consumes:
      - "multipart/form-data"
      parameters:
      - name: username
        in: formData
        required: true
        type: string
        description: "The user or account name."
      - name: password
        in: formData
        required: true
        type: string
        description: "The password for the user or account."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/JWTAccessTokens"
        401:
          description: "Unauthorized: Missing expected credentials."
        403:
          description: "Forbidden: Bad credentials, authentication failed."

##############################################################################
# ENDPOINT - Refresh
##############################################################################

  /refresh:
    post:
      tags:
      - authentication
      summary: "Fetch a fresh JWT access token."
      operationId: refreshToken
      security:
        - Bearer: []
      parameters:
      - name: Authorization
        in: header
        required: true
        type: string
        description: "The JWT refresh token."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/JWTRefreshToken"
        401:
          description: "Unauthorized: Missing authorization header."
        422:
          description: "Unprocessable Entity: Invalid token."

##############################################################################
# ENDPOINT - Person
##############################################################################

  /person:
    get:
      tags:
      - person
      summary: "Get information about multiple people."
      operationId: getPeople
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a person."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a person, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the person profile should be included in the response. The person profile contains summarized information about the person and their familial relationships in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the notes records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Person"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No people found."

  /person/{handle}:
    get:
      tags:
      - person
      summary: "Get information about a specific person."
      operationId: getPerson
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a person."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the person profile should be included in the response. The person profile contains summarized information about the person and their familial relationships in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the notes records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Person"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Person not found."

##############################################################################
# ENDPOINT - Family
##############################################################################

  /family:
    get:
      tags:
      - family
      summary: "Get information about multiple families."
      operationId: getFamilies
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a family."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a family, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the family profile should be included in the response. The family profile contains summarized information about the family and their members in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the notes records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Family"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No families found."

  /family/{handle}:
    get:
      tags:
      - family
      summary: "Get information about a specific family."
      operationId: getFamily
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a family."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the family profile should be included in the response. The family profile contains summarized information about the family and their members in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the notes records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Family"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Family not found."

##############################################################################
# ENDPOINT - Event
##############################################################################

  /event:
    get:
      tags:
      - event
      summary: "Get information about multiple events."
      operationId: getEvents
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for an event."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for an event, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the event profile should be included in the response. The event profile contains some brief information about the event in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Event"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No events found."

  /event/{handle}:
    get:
      tags:
      - event
      summary: "Get information about a specific event."
      operationId: getEvent
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for an event."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the event profile should be included in the response. The event profile contains some brief information about the event in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Event"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Event not found."

##############################################################################
# ENDPOINT - Place
##############################################################################

  /place:
    get:
      tags:
      - place
      summary: "Get information about multiple places."
      operationId: getPlaces
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a place."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a place, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Place"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No places found."

  /place/{handle}:
    get:
      tags:
      - place
      summary: "Get information about a specific place."
      operationId: getPlace
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a place."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Place"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Place not found."

##############################################################################
# ENDPOINT - Citation
##############################################################################

  /citation:
    get:
      tags:
      - citation
      summary: "Get information about multiple citations."
      operationId: getCitations
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a citation."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a citation, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Citation"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No citations found."

  /citation/{handle}:
    get:
      tags:
      - citation
      summary: "Get information about a specific citation."
      operationId: getCitation
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a citation."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Citation"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Citation not found."

##############################################################################
# ENDPOINT - Source
##############################################################################

  /source:
    get:
      tags:
      - source
      summary: "Get information about multiple sources."
      operationId: getSources
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a source."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a source, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Source"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No sources found."

  /source/{handle}:
    get:
      tags:
      - source
      summary: "Get information about a specific source."
      operationId: getSource
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a source."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Source"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Source not found."

##############################################################################
# ENDPOINT - Repository
##############################################################################

  /repository:
    get:
      tags:
      - repository
      summary: "Get information about multiple repositories."
      operationId: getRepositories
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a repository."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a repository, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Repository"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No repositories found."

  /repository/{handle}:
    get:
      tags:
      - repository
      summary: "Get information about a specific repository."
      operationId: getRepository
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a repository."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Repository"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Repository not found."

##############################################################################
# ENDPOINT - Media
##############################################################################

  /media:
    get:
      tags:
      - media
      summary: "Get information about multiple media items."
      operationId: getMediaItems
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a media item."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a media item, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Media"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No media items found."

  /media/{handle}:
    get:
      tags:
      - media
      summary: "Get information about a specific media item."
      operationId: getMediaItem
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a media item."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Media"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Media item not found."

##############################################################################
# ENDPOINT - Note
##############################################################################

  /note:
    get:
      tags:
      - note
      summary: "Get information about multiple notes."
      operationId: getNotes
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a note."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a note, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Note"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No notes found."

  /note/{handle}:
    get:
      tags:
      - note
      summary: "Get information about a specific note."
      operationId: getNote
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a note."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Note"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Note not found."

##############################################################################
# ENDPOINT - Tag
##############################################################################

  /tag:
    get:
      tags:
      - tag
      summary: "Get information about multiple tags."
      operationId: getTags
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a tag."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Tag"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No tags found."

  /tag/{handle}:
    get:
      tags:
      - tag
      summary: "Get information about a specific tag."
      operationId: getTag
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a tag."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Tag"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Tag not found."

##############################################################################
# ENDPOINT - Bookmark
##############################################################################

  /bookmark:
    get:
      tags:
      - bookmark
      summary: "Get a list of available bookmark types."
      operationId: getBookmarkTypes
      security:
        - Bearer: []
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              type: string
            description: "A list of bookmark types."
        401:
          description: "Unauthorized: Missing authorization header."

  /bookmark/{bookmark_type}:
    get:
      tags:
      - bookmark
      summary: "Get bookmarks for a given bookmark type."
      operationId: getBookmarks
      security:
        - Bearer: []
      parameters:
      - name: bookmark_type
        in: path
        required: true
        type: string
        description: "The bookmark type."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              type: string
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Bookmark type not found."

##############################################################################
# ENDPOINT - Translate (Needs work)
##############################################################################

  /translate:
    get:
      tags:
      - translate
      summary: "Get information about available translations."
      operationId: getTranslations
      security:
        - Bearer: []
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Translations"
        401:
          description: "Unauthorized: Missing authorization header."

  /translate/{lang}:
    get:
      tags:
      - translate
      summary: "Get a translation in a specific language."
      operationId: getTranslation
      security:
        - Bearer: []
      parameters:
      - name: lang
        in: path
        required: true
        type: string
        description: "The language identifier."
      - name: strings
        in: query
        required: true
        type: string
        description: "A list of strings to be translated."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Translation"
        401:
          description: "Unauthorized: Missing authorization header."

##############################################################################
# ENDPOINT - Relation
##############################################################################

  /relation/{handle1}/{handle2}:
    get:
      tags:
      - relation
      summary: "Get relation between two people if one exists."
      operationId: getRelation
      security:
        - Bearer: []
      parameters:
      - name: handle1
        in: path
        required: true
        type: string
        description: "The handle of the first person."
      - name: handle2
        in: path
        required: true
        type: string
        description: "The handle of the second person."
      - name: depth
        in: query
        required: false
        type: integer
        description: "Depth for the search, default is 15 generations."
      - name: all
        in: query
        required: false
        type: boolean
        description: "Indicates to return all the ways the people are related as opposed to the most direct way."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Relationship"
        401:
          description: "Unauthorized: Missing authorization header."

##############################################################################
# ENDPOINT - Type
##############################################################################

  /type:
    get:
      tags:
      - type
      summary: "Get a list of available Gramps record types."
      operationId: getRecordTypes
      security:
        - Bearer: []
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              type: string
            description: "A list of Gramps record types."
        401:
          description: "Unauthorized: Missing authorization header."

  /type/{gramps_type}:
    get:
      tags:
      - type
      summary: "Get attribute strings for a Gramps record type."
      operationId: getRecordType
      security:
        - Bearer: []
      parameters:
      - name: gramps_type
        in: path
        required: true
        type: string
        description: "The Gramps record type."
      responses:
        200:
          description: "Successful operation."
          schema:
            type: array
            items:
              type: string
            description: "A list of attribute strings for the given Gramps record type."
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Gramps record type not found."

##############################################################################
# ENDPOINT - Tree
##############################################################################

  /metadata:
    get:
      tags:
      - metadata
      summary: "Get metadata pertaining to the tree or application state itself."
      operationId: getTree
      security:
        - Bearer: []
      responses:
        200:
          description: Successful operation.
          schema:
            type: array
            items:
              $ref: "#/definitions/Tree"
        401:
          description: "Unauthorized: Missing authorization header."

definitions:
##############################################################################
# MODEL - Token
##############################################################################
  JWTAccessTokens:
    type: object
    properties:
      access_token:
        description: Access token
        type: string
      refresh_token:
        description: Refresh token
        type: string

  JWTRefreshToken:
    type: object
    properties:
      refresh_token:
        description: Refresh token
        type: string
	
##############################################################################
# MODEL - Person
##############################################################################
  Person:
    type: object
    required:
    - handle
    properties:
      address_list:
        description: Address of the person
        type: array
        items:
          $ref: "#/definitions/Address"
      alternate_names:
        description: List of all the known names used by the person
        type: array
        items:
          $ref: "#/definitions/Name"
      attribute_list:
        description: List of attributes about the person
        type: array
        items:
          $ref: "#/definitions/Attribute"
      birth_ref_index:
        description: Indicates if a birth event is assigned to the person
        type: integer
        example: 0
      change:
        description: Time in epoch format person was last modified
        type: number
        example: 1601335222
      citation_list:
        description: List of handles for citations supporting the person
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      death_ref_index:
        description: Indicates if a death event is assigned to the person
        type: integer
        example: 0
      event_ref_list:
        description: List of references to events the person participated in
        type: array
        items:
          $ref: "#/definitions/EventReference"
      family_list:
        description: A list of handles for the families the person was a parent of
        type: array
        items:
          type: string
        example:
          - e9027bf39c36d6cdd046748852e
      gender:
        description: Sex of the person
        type: integer
        example: 1
      gramps_id:
        description: Common identifier for a person object, may not be unique
        type: string
        example: P0001
      handle:
        description: Unique identifier for a person object
        type: string
        example: e9027bf389921fb966e851abce5
      lds_ord_list:
        description: List of LDS specific events the person participated in
        type: array
        items:
          $ref: "#/definitions/LDSOrdination"
      media_list:
        description: List of references to media associated with the person
        type: array
        items:
          $ref: "#/definitions/MediaReference"
      note_list:
        description: List of handles for research notes related to the person
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      parent_family_list:
        description: A list of handles for the families of the parents of the person
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      person_ref_list:
        description: List of references to relationships with other people
        type: array
        items:
          $ref: "#/definitions/PersonReference"
      primary_name:
        description: Primary name of the person
        type: object
        items:
          $ref: "#/definitions/Name"
      private:
        description: Private object indicator
        type: boolean
        example: true
      profile:
        description: Key attributes about the person
        type: object
        items:
          $ref: "#/definitions/PersonProfile"
      tags:
        description: List of handles to tags associated with the person
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      urls:
        description: List of URLs associated with the person
        type: array
        items:
          $ref: "#/definitions/URL"

##############################################################################
# MODEL - PersonProfile
##############################################################################
  PersonProfile:      
    type: object
    properties:            
      birth_date:
        description: Date of birth of the person
        type: string
        example: "1685-03-31"
      birth_place:
        description: Handle for place of birth of the person
        type: string
        example: e9027bf39c27be945fab9df8124
      death_date:
        description: Date of death of the person
        type: string
        example: "1750-07-28"
      death_place:
        description: Handle for place of death of the person
        type: string
        example: e9027bf39c27be945fab9df8124
      name_given:
        description: Preferred given name of the person
        type: string
        example: Johann Sebastian
      name_surname:
        description: Preferred surname of the person
        type: string
        example: Bach
      parents_primary:
        description: The handle of the family of the preferred parents of the person
        type: string
        example: F0002

##############################################################################
# MODEL - Name
##############################################################################
  Name:
    type: object
    properties:
      call: 
        description: Call name
        type: string
        example: Joseph
      citation_list:
        description: List of handles for citations supporting the name
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      date:
        description: Date name in use
        type: string
        example: "1750-07-28"
      display_as:
        description: For identifying how to display the name
        type: string
      famnick:
        description: Family nick name
        type: string
        example: ""
      first_name:
        description: First part of name
        type: string
        example: James Joseph
      group_as:
        description: For identifying how to group the name
        type: string
      nick:
        description: Nick name
        type: string
        example: Jim
      note_list:
        description: List of handles for research notes about the name
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: Private object indicator
        type: boolean
        example: true
      sort_as:
        description: For identifying how to sort the name
        type: string
      suffix:
        description: Suffix, usually denotes credentials
        type: string
        example: Phd
      surname_list:
        description: Surnames
        type: array
        items:
          $ref: "#/definitions/Surname"
      title:
        description: Prefix or title
        type: string
        example: Dr
      type:
        description: Type of name
        type: string
        example: "Also Known As"

##############################################################################
# MODEL - Surname
##############################################################################
  Surname:
    type: object
    properties:
      connector:
        description: Connector to tie given name and surname together
        type: string
        example: van
      origintype:
        description: Name origin
        type: string
        example: 
      prefix:
        description: A name prefix
        type: string
        example: van
      primary:
        description: Primary surname indicator
        type: boolean
        example: true
      surname:
        description: Actual surname
        type: string
        example: Degroat

##############################################################################
# MODEL - Attribute
##############################################################################
  Attribute:
    type: object
    properties:
      citation_list:
        description: List of handles for citations supporting the attribute
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      note_list:
        description: List of handles for research notes about the attribute
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: Private object indicator
        type: boolean
        example: true
      type:
        description: Type of the attribute
        type: string
        example: "Y-DNA Haplogroup"
      value:
        description: Value of the attribute
        type: string
        example: P259

##############################################################################
# MODEL - EventReference
##############################################################################
  EventReference:
    type: object
    properties:
      attribute_list:
        description: List of attributes related to the role of the person in the event
        type: array
        items:
          $ref: "#/definitions/Attribute"
      note_list:
        description: List of handles for research notes about the event
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: Private object indicator
        type: boolean
        example: true
      ref:
        description: Handle of the event reference
        type: string
        example: e9027bf389921fb966e851abce5
      role:
        description: Role of person in the event
        type: string
        example: Witness

##############################################################################
# MODEL - PersonReference
##############################################################################
  PersonReference:
    type: object
    properties:
      citation_list:
        description: List of handles for citations supporting the association
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      note_list:
        description: List of handles for research notes about the association
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: Private object indicator
        type: boolean
        example: true
      ref:
        description: Handle of the person reference
        type: string
        example: e9027bf389921fb966e851abce5
      rel:
        description: Relationship between the people
        type: string
        example: Godparent

##############################################################################
# MODEL - MediaReference
##############################################################################
  MediaReference:
    type: object
    properties:
      attribute_list:
        description: Attributes related to the media reference
        type: array
        items:
          $ref: AttributeReference
      citation_list:
        description: List of handles for citations supporting the media reference
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      note_list:
        description: List of handles for research notes about the media reference
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: Private object indicator
        type: boolean
        example: true
      rect:
        description: Rectangle
        type: array
        items:
          type: number
        example: [10, 20, 30, 40]
      ref:
        description: Handle of the media reference
        type: string
        example: e9027bf389921fb966e851abce5

##############################################################################
# MODEL - LDSOrdination
##############################################################################
  LDSOrdination:
    type: object
    properties:
      citation_list:
        description: List of handles for citations supporting the LDS event
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      date:
        description: Date of event
        type: string
        example: "1750-07-28"
      famc:
        description: Family
        type: string
        example: F0022
      note_list:
        description: List of handles for research notes about the LDS event
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      place:
        description: Location of event
        type: string
        example: "Salt Lake City, Utah, United States"
      private:
        description: Private object indicator
        type: boolean
        example: true
      status:
        description: Status of event
        type: string
      temple:
        description: Temple
        type: string
      type:
        description: Type of event
        type: string
        example: Baptism

##############################################################################
# MODEL - URL
##############################################################################
  URL:
    type: object
    properties:
      description:
        description: Description of the URL
        type: string
        example: Person page on FamilySearch
      path:
        description: URL
        type: string
        example: "https://www.familysearch.org/tree/person/details/AYFC-722"
      private:
        description: Private object indicator
        type: boolean
        example: true
      type:
        description: Type of URL
        type: string
        example: Unsure

##############################################################################
# MODEL - Address
##############################################################################
  Address:
    type: object
    properties:
      citation_list:
        description: List of handles for citations supporting the media reference
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      city:
        description: City
        type: string
      country:
        description: Country
        type: string
      county:
        description: County
        type: string
      date:
        type: string
      locality:
        description: Locality
        type: string
      note_list:
        description: List of handles for research notes about the media reference
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      phone:
        description: Phone number
        type: string
      postal:
        description: Postal code
        type: string
      private:
        description: Private object indicator
        type: boolean
        example: true
      state:
        description: State
        type: string
