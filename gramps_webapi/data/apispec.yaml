swagger: "2.0"
info:
  title: "Gramps Web API"
  description: >
    The Gramps Web API is a REST API that provides access to family tree databases generated and maintained with Gramps, a popular Open Source genealogical research software package.

    * The Gramps Web API project is hosted at https://github.com/gramps-project/web-api

    * More about Gramps and the numerous features it provides for genealogists can be found at https://gramps-project.org
  version: "0.0.1"
  license:
    name: "GNU GPL v2.0"
    url: "http://www.gnu.org/licenses/old-licenses/gpl-2.0.html"
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

tags:
- name: authentication
  description: Authentication endpoints.
- name: person
  description: Person endpoint.
- name: family
  description: Family endpoint.
- name: event
  description: Event endpoint.
- name: place
  description: Place endpoint.
- name: citation
  description: Citation endpoint.
- name: source
  description: Source endpoint.
- name: repository
  description: Repository endpoint.
- name: media
  description: Media endpoint.
- name: note
  description: Note endpoint.
- name: tag
  description: Tag endpoint.
- name: bookmark
  description: Bookmark endpoint.
- name: translate
  description: Translate endpoint.
- name: relation
  description: Relation endpoint.
- name: metadata
  description: Metadata endpoint.

##############################################################################
# Endpoint definitions    
##############################################################################    

paths:

##############################################################################
# Endpoint - Login
##############################################################################

  /login:
    post:
      tags:
      - authentication
      summary: "Authenticate a user to obtain a pair of JWT access tokens."
      operationId: login
      consumes:
      - "multipart/form-data"
      parameters:
      - name: username
        in: formData
        required: true
        type: string
        description: "The user or account name."
      - name: password
        in: formData
        required: true
        type: string
        description: "The password for the user or account."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/JWTAccessTokens"
        401:
          description: "Unauthorized: Missing expected credentials."
        403:
          description: "Forbidden: Bad credentials, authentication failed."

##############################################################################
# Endpoint - Refresh
##############################################################################

  /refresh:
    post:
      tags:
      - authentication
      summary: "Fetch a fresh JWT access token."
      operationId: refreshToken
      security:
        - Bearer: []
      parameters:
      - name: Authorization
        in: header
        required: true
        type: string
        description: "The JWT refresh token."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/JWTRefreshToken"
        401:
          description: "Unauthorized: Missing authorization header."
        422:
          description: "Unprocessable Entity: Invalid token."

##############################################################################
# Endpoint - Person
##############################################################################

  /person:
    get:
      tags:
      - person
      summary: "Get information about multiple people."
      operationId: getPeople
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a person."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a person, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the person profile should be included in the response. The person profile contains summarized information about the person and their familial relationships in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the notes records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Person"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No people found."

  /person/{handle}:
    get:
      tags:
      - person
      summary: "Get information about a specific person."
      operationId: getPerson
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a person."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the person profile should be included in the response. The person profile contains summarized information about the person and their familial relationships in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the notes records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Person"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Person not found."

##############################################################################
# Endpoint - Family
##############################################################################

  /family:
    get:
      tags:
      - family
      summary: "Get information about multiple families."
      operationId: getFamilies
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a family."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a family, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the family profile should be included in the response. The family profile contains summarized information about the family and their members in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the notes records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Family"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No families found."

  /family/{handle}:
    get:
      tags:
      - family
      summary: "Get information about a specific family."
      operationId: getFamily
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a family."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the family profile should be included in the response. The family profile contains summarized information about the family and their members in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the notes records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Family"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Family not found."

##############################################################################
# Endpoint - Event
##############################################################################

  /event:
    get:
      tags:
      - event
      summary: "Get information about multiple events."
      operationId: getEvents
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for an event."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for an event, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the event profile should be included in the response. The event profile contains some brief information about the event in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Event"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No events found."

  /event/{handle}:
    get:
      tags:
      - event
      summary: "Get information about a specific event."
      operationId: getEvent
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for an event."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: profile
        in: query
        required: false
        type: boolean
        description: "Indicates that the event profile should be included in the response. The event profile contains some brief information about the event in a more readily consumable format."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Event"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Event not found."

##############################################################################
# Endpoint - Place
##############################################################################

  /place:
    get:
      tags:
      - place
      summary: "Get information about multiple places."
      operationId: getPlaces
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a place."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a place, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Place"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No places found."

  /place/{handle}:
    get:
      tags:
      - place
      summary: "Get information about a specific place."
      operationId: getPlace
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a place."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Place"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Place not found."

##############################################################################
# Endpoint - Citation
##############################################################################

  /citation:
    get:
      tags:
      - citation
      summary: "Get information about multiple citations."
      operationId: getCitations
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a citation."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a citation, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Citation"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No citations found."

  /citation/{handle}:
    get:
      tags:
      - citation
      summary: "Get information about a specific citation."
      operationId: getCitation
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a citation."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Citation"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Citation not found."

##############################################################################
# Endpoint - Source
##############################################################################

  /source:
    get:
      tags:
      - source
      summary: "Get information about multiple sources."
      operationId: getSources
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a source."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a source, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Source"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No sources found."

  /source/{handle}:
    get:
      tags:
      - source
      summary: "Get information about a specific source."
      operationId: getSource
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a source."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Source"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Source not found."

##############################################################################
# Endpoint - Repository
##############################################################################

  /repository:
    get:
      tags:
      - repository
      summary: "Get information about multiple repositories."
      operationId: getRepositories
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a repository."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a repository, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Repository"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No repositories found."

  /repository/{handle}:
    get:
      tags:
      - repository
      summary: "Get information about a specific repository."
      operationId: getRepository
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a repository."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Repository"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Repository not found."

##############################################################################
# Endpoint - Media
##############################################################################

  /media:
    get:
      tags:
      - media
      summary: "Get information about multiple media items."
      operationId: getMediaItems
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a media item."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a media item, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Media"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No media items found."

  /media/{handle}:
    get:
      tags:
      - media
      summary: "Get information about a specific media item."
      operationId: getMediaItem
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a media item."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Media"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Media item not found."

##############################################################################
# Endpoint - Note
##############################################################################

  /note:
    get:
      tags:
      - note
      summary: "Get information about multiple notes."
      operationId: getNotes
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a note."
      - name: gramps_id
        in: query
        required: false
        type: string
        description: "An alternate user managed identifier for a note, usually but not guaranteed to be unique."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Note"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No notes found."

  /note/{handle}:
    get:
      tags:
      - note
      summary: "Get information about a specific note."
      operationId: getNote
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a note."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      - name: extend
        in: query
        required: false
        type: boolean
        description: "Indicates that the attributes for referenced handles should be returned in the response. For example, while the note_list contains the handles of the note records, this will return the actual records in a separate extended section."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Note"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Note not found."

##############################################################################
# Endpoint - Tag
##############################################################################

  /tag:
    get:
      tags:
      - tag
      summary: "Get information about multiple tags."
      operationId: getTags
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: query
        required: false
        type: string
        description: "The unique identifier for a tag."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Tag"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: No tags found."

  /tag/{handle}:
    get:
      tags:
      - tag
      summary: "Get information about a specific tag."
      operationId: getTag
      security:
        - Bearer: []
      parameters:
      - name: handle
        in: path
        required: true
        type: string
        description: "The unique identifier for a tag."
      - name: strip
        in: query
        required: false
        type: boolean
        description: "Indicates if keys with empty values should be stripped out of the response."
      - name: keys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to return in the response, omitting all others."
      - name: skipkeys
        in: query
        required: false
        type: string
        description: "A comma delimited list of specific top level keys to omit from a response, keeping all others."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Tag"
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Tag not found."

##############################################################################
# Endpoint - Bookmark
##############################################################################

  /bookmark:
    get:
      tags:
      - bookmark
      summary: "Get a list of bookmark categories."
      operationId: getBookmarkCategories
      security:
        - Bearer: []
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: object
            properties:
              categories:
                type: array
                items:
                  type: string
            example:
                categories:
                - citation
                - event
                - family
                - media
                - note
                - person
                - place
                - repository
                - source
        401:
          description: "Unauthorized: Missing authorization header."

  /bookmark/{category}:
    get:
      tags:
      - bookmark
      summary: "Get bookmarks for a given category."
      operationId: getBookmarks
      security:
        - Bearer: []
      parameters:
      - name: category
        in: path
        required: true
        type: string
        description: "The category for the bookmarks."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: object
            properties:
              bookmarks:
                type: array
                items:
                  type: string
            example:
                bookmarks:
                - e9027bf5e7f77551b12e7da3c77
                - e9027bf3de2402f9faaac001cef
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Bookmark type not found."

##############################################################################
# Endpoint - Translate
##############################################################################

  /translate:
    get:
      tags:
      - translate
      summary: "Get information about available translations."
      operationId: getTranslations
      security:
        - Bearer: []
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Translations"
        401:
          description: "Unauthorized: Missing authorization header."

  /translate/{code}:
    get:
      tags:
      - translate
      summary: "Get a translation in a specific language."
      operationId: getTranslation
      security:
        - Bearer: []
      parameters:
      - name: code
        in: path
        required: true
        type: string
        description: "The language code or identifier."
      - name: strings
        in: query
        required: true
        type: string
        description: "The list of strings to be translated."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Translation"
        401:
          description: "Unauthorized: Missing authorization header."

##############################################################################
# Endpoint - Relation
##############################################################################

  /relation/{handle1}/{handle2}:
    get:
      tags:
      - relation
      summary: "Get relation between two people if one exists."
      operationId: getRelation
      security:
        - Bearer: []
      parameters:
      - name: handle1
        in: path
        required: true
        type: string
        description: "The handle of the first person."
      - name: handle2
        in: path
        required: true
        type: string
        description: "The handle of the second person."
      - name: depth
        in: query
        required: false
        type: integer
        description: "Depth for the search, default is 15 generations."
      - name: all
        in: query
        required: false
        type: boolean
        description: "Indicates to return all the ways the people are related as opposed to the most direct way."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            $ref: "#/definitions/Relationship"
        401:
          description: "Unauthorized: Missing authorization header."

##############################################################################
# Endpoint - Metadata
##############################################################################

  /metadata/summary:
    get:
      tags:
      - metadata
      summary: "Get summary information about the currently loaded tree."
      operationId: getTreeSummary
      security:
        - Bearer: []
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: object
            items:
              $ref: "#/definitions/TreeSummary"
        401:
          description: "Unauthorized: Missing authorization header."

  /metadata/researcher:
    get:
      tags:
      - metadata
      summary: "Get information about the researcher for the currently loaded tree."
      operationId: getTreeResearcher
      security:
        - Bearer: []
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            type: object
            items:
              $ref: "#/definitions/TreeResearcher"
        401:
          description: "Unauthorized: Missing authorization header."

  /metadata/surnames:
    get:
      tags:
      - metadata
      summary: "Get a list of all surnames from the currently loaded tree."
      operationId: getTreeSurnames
      security:
        - Bearer: []
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            description: "The list of surnames."
            type: array
            items:
              type: string
        401:
          description: "Unauthorized: Missing authorization header."
    
  /metadata/types:
    get:
      tags:
      - metadata
      summary: "Get a list of available Gramps record types or attributes."
      operationId: getRecordTypes
      security:
        - Bearer: []
      parameters:
      - name: type
        in: query
        required: false
        type: string
        description: "The Gramps record type for which to fetch attributes."
      responses:
        200:
          description: "OK: Successful operation."
          schema:
            description: "A list of Gramps record types or attributes."
            type: array
            items:
              type: string
        401:
          description: "Unauthorized: Missing authorization header."
        404:
          description: "Not Found: Gramps record type not found."

##############################################################################    
# Model definitions    
##############################################################################

definitions:

##############################################################################
# Model - Token
##############################################################################

  JWTAccessTokens:
    type: object
    properties:
      access_token:
        description: Access token
        type: string
      refresh_token:
        description: Refresh token
        type: string

  JWTRefreshToken:
    type: object
    properties:
      refresh_token:
        description: Refresh token
        type: string

##############################################################################
# Model - Date
##############################################################################

  Date:
    type: object
    properties:
      calendar:
        description: "The calendar format for the date."
        type: integer
        example: 0
      dateval:
        description: "The value for the date. A mixed array of integer and boolean types."
        type: array
        items:
          type: object
      format:
        description: "TODO: Is this part of the JSON schema?"
        type: string
        example: null
      modifier:
        description: "Modifier."
        type: integer
        example: 6
      newyear:
        description: "New year begins."
        type: integer
        example: 0
      quality:
        description: "Quality"
        type: integer
        example: 0
      sortval:
        description: "Indicator for how to sort the date."
        type: integer
        example: 0
      text:
        description: "Textual representation of the date."
        type: string
        example: "August 1902"
      year:
        description: "TODO: Is this part of the JSON schema?"
        type: integer
        example: 0

##############################################################################
# Model - Name
##############################################################################

  Name:
    type: object
    properties:
      call: 
        description: "Call name."
        type: string
        example: Joseph
      citation_list:
        description: "A list of handles for citations supporting the name."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      date:
        description: "Date the name was in use."
        type: object
        items:
          $ref: "#/definitions/Date"
      display_as:
        description: "For identifying how to display the name."
        type: string
      famnick:
        description: "Family nick name."
        type: string
        example: ""
      first_name:
        description: "First part of name."
        type: string
        example: James Joseph
      group_as:
        description: "For identifying how to group the name."
        type: string
      nick:
        description: "Nick name."
        type: string
        example: Jim
      note_list:
        description: "A list of handles for research notes about the name."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      sort_as:
        description: "For identifying how to sort the name."
        type: string
      suffix:
        description: "Suffix, usually denotes credentials."
        type: string
        example: Phd
      surname_list:
        description: "Surnames."
        type: array
        items:
          $ref: "#/definitions/Surname"
      title:
        description: "Prefix or title."
        type: string
        example: Dr
      type:
        description: "Type of name."
        type: string
        example: "Also Known As"

##############################################################################
# Model - Surname
##############################################################################

  Surname:
    type: object
    properties:
      connector:
        description: "Connector to tie given name and surname together."
        type: string
        example: van
      origintype:
        description: "Name origin."
        type: string
        example: 
      prefix:
        description: "A name prefix."
        type: string
        example: van
      primary:
        description: "Primary surname indicator."
        type: boolean
        example: true
      surname:
        description: "Actual surname."
        type: string
        example: Degroat

##############################################################################
# Model - Attribute
##############################################################################

  Attribute:
    type: object
    properties:
      citation_list:
        description: "A list of handles for citations supporting the attribute."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      note_list:
        description: "A list of handles for research notes about the attribute."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      type:
        description: "Type of the attribute."
        type: string
        example: "Y-DNA Haplogroup"
      value:
        description: "Value of the attribute."
        type: string
        example: P259

##############################################################################
# Model - Person
##############################################################################

  Person:
    type: object
    required:
    - handle
    properties:
      address_list:
        description: "A list of addresses for the person if available."
        type: array
        items:
          $ref: "#/definitions/Address"
      alternate_names:
        description: "A list of all the known names used by the person."
        type: array
        items:
          $ref: "#/definitions/Name"
      attribute_list:
        description: "A list of attributes about the person."
        type: array
        items:
          $ref: "#/definitions/Attribute"
      birth_ref_index:
        description: "Indicates if a birth event is assigned to the person."
        type: integer
        example: 0
      change:
        description: "Time in epoch format the person record was last modified."
        type: number
        example: 1601335222
      citation_list:
        description: "A list of handles for citations supporting the person."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      death_ref_index:
        description: "Indicates if a death event is assigned to the person."
        type: integer
        example: 0
      event_ref_list:
        description: "A list of references to events the person participated in."
        type: array
        items:
          $ref: "#/definitions/EventReference"
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/PersonExtended"
      family_list:
        description: "A list of handles for the families the person was a parent of."
        type: array
        items:
          type: string
        example:
          - e9027bf39c36d6cdd046748852e
      gender:
        description: "Sex of the person."
        type: integer
        example: 1
      gramps_id:
        description: "An alternate user managed identifier for the person, usually but not guaranteed to be unique."
        type: string
        example: P0001
      handle:
        description: "The unique identifier for a person."
        type: string
        example: e9027bf389921fb966e851abce5
      lds_ord_list:
        description: "A list of LDS specific events the person participated in."
        type: array
        items:
          $ref: "#/definitions/LDSOrdination"
      media_list:
        description: "A list of references to media associated with the person."
        type: array
        items:
          $ref: "#/definitions/MediaReference"
      note_list:
        description: "A list of handles for research notes related to the person."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      parent_family_list:
        description: "A list of handles for the families of the parents of the person."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      person_ref_list:
        description: "A list of references to relationships the person had with other people."
        type: array
        items:
          $ref: "#/definitions/PersonReference"
      primary_name:
        description: "The primary name of the person."
        type: object
        items:
          $ref: "#/definitions/Name"
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      profile:
        description: "An optional summary of some key events about the person and their familial relationships."
        type: object
        items:
          $ref: "#/definitions/PersonProfile"
      tag_list:
        description: "A list of handles to tags associated with the person."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      urls:
        description: "A list of URLs associated with the person."
        type: array
        items:
          $ref: "#/definitions/URL"

##############################################################################
# Model - PersonExtended
##############################################################################

  PersonExtended:
    type: object
    properties:            
      citations:
        description: "The citation records for any referenced citations."
        type: array
        items:
          $ref: "#/definitions/Citation"
      events:
        description: "The event records for any referenced events."
        type: array
        items:
          $ref: "#/definitions/Event"
      families:
        description: "The family records for any referenced families."
        type: array
        items:
          $ref: "#/definitions/Family"
      media:
        description: "The media records for any referenced media objects."
        type: array
        items:
          $ref: "#/definitions/Media"
      notes:
        description: "The note records for any referenced notes."
        type: array
        items:
          $ref: "#/definitions/Note"
      parent_families:
        description: "The family records for any referenced parent families."
        type: array
        items:
          $ref: "#/definitions/Family"
      people:
        description: "The person records for any referenced persons."
        type: array
        items:
          $ref: "#/definitions/Person"
      primary_parent_family:
        description: "The family record for the primary parent family if referenced."
        type: object
        items:
          $ref: "#/definitions/Family"
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"

##############################################################################
# Model - PersonProfile
##############################################################################

  PersonProfile:      
    type: object
    properties:            
      birth:
        description: "The birth event profile, or best fallback such as baptism, of the person."
        type: object
        items:
          $ref: "#/definitions/EventProfile"
      death:
        description: "The death event profile, or best fallback such as burial, of the person."
        type: object
        items:
          $ref: "#/definitions/EventProfile"    
      events:
        description: "The event profiles for all the referenced events for the person."
        type: array
        items:
          $ref: "#/definitions/EventProfile"
      families:
        description: "The family profiles for families the person was a parent of."
        type: array
        items:
          $ref: "#/definitions/FamilyProfile"
      handle:
        description: "The unique identifier for a person."
        type: string
        example: e9027bf389921fb966e851abce5
      name_given:
        description: "Preferred given name of the person."
        type: string
        example: Johann Sebastian
      name_surname:
        description: "Preferred surname of the person."
        type: string
        example: Bach
      other_parent_families:
        description: "The family profiles for families of the parents of the person other than the primary parent family profile."
        type: array
        items:
          $ref: "#/definitions/FamilyProfile"
      primary_parent_family:
        description: "The family profile for the primary or preferred parents of the person."
        type: object
        items:
          $ref: "#/definitions/FamilyProfile"    
      sex:
        description: "Simple identified for gender/sex of the person."
        type: string
        example: "M"

##############################################################################
# Model - PersonReference
##############################################################################

  PersonReference:
    type: object
    properties:
      citation_list:
        description: "A list of handles for citations supporting the association."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      note_list:
        description: "A list of handles for research notes about the association."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      ref:
        description: "The handle of the person referenced."
        type: string
        example: e9027bf389921fb966e851abce5
      rel:
        description: "The relationship between the two people."
        type: string
        example: Godparent

##############################################################################
# Model - Family
##############################################################################
    
  Family:
    type: object
    required:
      - handle
    properties:
      attribute_list:
        description: "A list of attributes about the family."
        type: array
        items:
          $ref: "#/definitions/Attribute"
      change:
        description: "Time in epoch format the family record was last modified."
        type: number
        example: 1601335222
      child_ref_list:
        description: "A list of references to children who were members of the family."
        type: array
        items:
          $ref: "#/definitions/ChildReference"
      citation_list:
        description: "A list of handles for citations supporting the family."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      event_ref_list:
        description: "A list of references to events the family participated in."
        type: array
        items:
          $ref: "#/definitions/EventReference"
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/FamilyExtended"
      father_handle:
        description: "The unique identifier for the father of the family."
        type: string
        example: e9027bf389921fb966e851abaac
      gramps_id:
        description: "An alternate user managed identifier for the family, usually but not guaranteed to be unique."
        type: string
        example: F0001
      handle:
        description: "The unique identifier for a family."
        type: string
        example: e9027bf389921fb966e851abce5
      lds_ord_list:
        description: "A list of LDS specific events the family participated in."
        type: array
        items:
          $ref: "#/definitions/LDSOrdination"
      media_list:
        description: "A list of references to media associated with the family."
        type: array
        items:
          $ref: "#/definitions/MediaReference"
      mother_handle:
        description: "The unique identifier for the mother of the family."
        type: string
        example: e9027bf389921fb966e851abaac
      note_list:
        description: "A list of handles for research notes related to the person."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      profile:
        description: "An optional summary of the members of a family as well as some key events."
        type: object
        items:
          $ref: "#/definitions/FamilyProfile"
      tag_list:
        description: "A list of handles to tags associated with the family."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      type:
        description: "The type of relationship between the parents of family."
        type: string
        example: Married

##############################################################################
# Model - FamilyExtended
##############################################################################

  FamilyExtended:
    type: object
    properties:            
      children:
        description: "The person records for any referenced children."
        type: array
        items:
          $ref: "#/definitions/Person"
      citations:
        description: "The citation records for any referenced citations."
        type: array
        items:
          $ref: "#/definitions/Citation"
      events:
        description: "The event records for any referenced events."
        type: array
        items:
          $ref: "#/definitions/Event"
      father:
        description: "The person record for the father if known."
        type: object
        items:
          $ref: "#/definitions/Person"
      media:
        description: "The media records for any referenced media objects."
        type: array
        items:
          $ref: "#/definitions/Media"
      mother:
        description: "The person record for the mother if known."
        type: object
        items:
          $ref: "#/definitions/Person"
      notes:
        description: "The note records for any referenced notes."
        type: array
        items:
          $ref: "#/definitions/Note"
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"
    
##############################################################################
# Model - FamilyProfile
##############################################################################

  FamilyProfile:      
    type: object
    properties:
      children:
        description: "The person profiles for any children in the family."
        type: array
        items:
          $ref: "#/definitions/PersonProfile"
      divorce:
        description: "The divorce event profile, or best fallback such as annulment, of the person."
        type: object
        items:
          $ref: "#/definitions/EventProfile"
      events:
        description: "The event profiles for all the referenced events for the family."
        type: array
        items:
          $ref: "#/definitions/EventProfile"
      father:
        description: "The person profile for the father of the family."
        type: object
        items:
          $ref: "#/definitions/PersonProfile"
      handle:
        description: "The unique identifier for a family."
        type: string
        example: e9027bf389921fb966e851abce5
      marriage:
        description: "The marriage event profile, or best fallback such as marriage license, of the person."
        type: object
        items:
          $ref: "#/definitions/EventProfile"    
      mother:
        description: "The person profile for the mother of the family."
        type: object
        items:
          $ref: "#/definitions/PersonProfile"
      relationship:
        description: "The relationship between the parents of the family."
        type: string
        example: "Married"

##############################################################################
# Model - ChildReference
##############################################################################

  ChildReference:
    type: object
    properties:
      citation_list:
        description: "A list of handles for citations supporting the reference to the child in the family."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      frel:
        description: "Relationship between the child and the father."
        type: string
        example: Birth
      mrel:
        description: "Relationship between the child and the mother."
        type: string
        example: Birth
      note_list:
        description: "A list of handles for research notes about the membership of the child in the family."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      ref:
        description: "The handle of the child referenced."
        type: string
        example: e9027bf389921fb966e851abce5

##############################################################################
# Model - Event
##############################################################################
    
  Event:
    type: object
    required:
      - handle
    properties:
      attribute_list:
        description: "A list of attributes about the event."
        type: array
        items:
          $ref: "#/definitions/Attribute"
      change:
        description: "Time in epoch format the event record was last modified."
        type: number
        example: 1601335222
      citation_list:
        description: "A list of handles for citations supporting the event."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      date:
        description: "The date of the event."
        type: object
        items:
          $ref: "#/definitions/Date"
      description:
        description: "A description for the event."
        type: string
        example: "Arrived at Port of New York on the Amsterdam."
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/EventExtended"
      gramps_id:
        description: "An alternate user managed identifier for the event, usually but not guaranteed to be unique."
        type: string
        example: E0001
      handle:
        description: "The unique identifier for an event."
        type: string
        example: e9027bf389921fb966e851abce5
      media_list:
        description: "A list of references to media associated with the event."
        type: array
        items:
          $ref: "#/definitions/MediaReference"
      note_list:
        description: "A list of handles for research notes related to the event."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      place:
        description: "The handle to the place record for where the event occurred."
        type: string
        example: e9027bf39c28be9457ab9df8124
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      profile:
        description: "An optional summary of the key attributes for the event."
        type: object
        items:
          $ref: "#/definitions/EventProfile"
      tag_list:
        description: "A list of handles to tags associated with the event."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      type:
        description: "The type of event."
        type: string
        example: "Residence"
    
##############################################################################
# Model - EventExtended
##############################################################################

  EventExtended:
    type: object
    properties:            
      citations:
        description: "The citation records for any referenced citations."
        type: array
        items:
          $ref: "#/definitions/Citation"
      media:
        description: "The media records for any referenced media objects."
        type: array
        items:
          $ref: "#/definitions/Media"
      notes:
        description: "The note records for any referenced notes."
        type: array
        items:
          $ref: "#/definitions/Note"
      place:
        description: "The place record if a place was referenced."
        type: object
        items:
          $ref: "#/definitions/Place"
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"

##############################################################################
# Model - EventProfile
##############################################################################

  EventProfile:
    type: object
    properties:
      date:
        description: "Date of the event."
        type: string
        example: "3 January 1922"
      place:
        description: "Place of the event."
        type: string
        example: "Manhattan, New York City, New York, United States"
      type:
        description: "Type of the event."
        type: string
        example: "Birth"

##############################################################################
# Model - EventReference
##############################################################################

  EventReference:
    type: object
    properties:
      attribute_list:
        description: "A list of attributes related to the role of the person in the event."
        type: array
        items:
          $ref: "#/definitions/Attribute"
      note_list:
        description: "A list of handles for research notes about the event."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      ref:
        description: "The handle of the event referenced."
        type: string
        example: e9027bf389921fb966e851abce5
      role:
        description: "Role of the person in the event."
        type: string
        example: Witness

##############################################################################
# Model - LDSOrdination
##############################################################################

  LDSOrdination:
    type: object
    properties:
      citation_list:
        description: "A list of handles for citations supporting the LDS event."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      date:
        description: "Date of the event."
        type: object
        items:
          $ref: "#/definitions/Date"
      famc:
        description: "Family."
        type: string
        example: F0022
      note_list:
        description: "A list of handles for research notes about the LDS event."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      place:
        description: "The location of the event."
        type: string
        example: "Salt Lake City, Utah, United States"
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      status:
        description: "Status of the event."
        type: string
      temple:
        description: "Temple the event was held at."
        type: string
      type:
        description: "Type of the event."
        type: string
        example: Baptism

##############################################################################
# Model - Place
##############################################################################

  Place:
    type: object
    properties:
      alt_loc:
        description: "Alternate locations for the place."
        type: array
        items:
          $ref: "#/definitions/Location"
      alt_names:
        description: "Alternate names for the place."
        type: array
        items:
          $ref: "#/definitions/PlaceName"    
      change:
        description: "Time in epoch format the event place was last modified."
        type: number
        example: 1601335222
      citation_list:
        description: "A list of handles for citations supporting the place."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      code:
        description: "Code."
        type: string
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/PlaceExtended"
      gramps_id:
        description: "An alternate user managed identifier for the place, usually but not guaranteed to be unique."
        type: string
        example: P0001
      handle:
        description: "The unique identifier for the place."
        type: string
        example: e9027bf389921fb966e851abce5
      lat:
        description: "Latitude."
        type: string
      long:
        description: "Longitude."
        type: string
      media_list:
        description: "A list of references to media associated with the person."
        type: array
        items:
          $ref: "#/definitions/MediaReference"
      name:
        description: "The place name."
        type: object
        items:
          $ref: "#/definitions/PlaceName"    
      note_list:
        description: "A list of handles for research notes related to the person."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      place_type:
        description: "The place type."
        type: string
      place_ref_list:
        description: "A list of references to other places."
        type: array
        items:
          $ref: "#/definitions/PlaceReference"
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      tag_list:
        description: "A list of handles to tags associated with the place."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      title:
        description: "The full name of the place."
        type: string
        example: "440 Robin Run Road, Somewhere, Someplace, USA"
      urls:
        description: "A list of URLs associated with the place."
        type: array
        items:
          $ref: "#/definitions/URL"

##############################################################################
# Model - PlaceExtended
##############################################################################

  PlaceExtended:
    type: object
    properties:            
      citations:
        description: "The citation records for any referenced citations."
        type: array
        items:
          $ref: "#/definitions/Citation"
      media:
        description: "The media records for any referenced media objects."
        type: array
        items:
          $ref: "#/definitions/Media"
      notes:
        description: "The note records for any referenced notes."
        type: array
        items:
          $ref: "#/definitions/Note"
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"

##############################################################################
# Model - PlaceName
##############################################################################

  PlaceName:
    type: object
    properties:
      date:
        description: "Date the place name was in use."
        type: object
        items:
          $ref: "#/definitions/Date"
      lang:
        description: "Language the name is in."
        type: string
      value:
        description: "The name in use."
        type: string

##############################################################################
# Model - PlaceReference
##############################################################################

  PlaceReference:
    type: object
    properties:
      date:
        description: "Date of the reference."
        type: object
        items:
          $ref: "#/definitions/Date"
      ref:
        description: "Handle of the referenced place."
        type: string

##############################################################################
# Model - Address
##############################################################################

  Address:
    type: object
    properties:
      citation_list:
        description: "A list of handles for citations supporting the address."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      city:
        description: "City."
        type: string
      country:
        description: "Country."
        type: string
      county:
        description: "County."
        type: string
      date:
        description: "Date resident at the address."
        type: object
        items:
          $ref: "#/definitions/Date"
      locality:
        description: "Locality."
        type: string
      note_list:
        description: "A list of handles for research notes about the address."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      phone:
        description: "Phone number."
        type: string
      postal:
        description: "Postal code."
        type: string
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      state:
        description: "State."
        type: string
    
##############################################################################
# Model - Location
##############################################################################

  Location:
    type: object
    properties:
      city:
        description: "City."
        type: string
      country:
        description: "Country."
        type: string
      county:
        description: "County."
        type: string
      locality:
        description: "Locality."
        type: string
      parish:
        description: "Parish."
        type: string
      phone:
        description: "Phone number."
        type: string
      postal:
        description: "Postal code."
        type: string
      state:
        description: "State."
        type: string
      street:
        description: "Street."
        type: string
      
##############################################################################
# Model - Citation
##############################################################################
    
  Citation:
    type: object
    required:
      - handle
    properties:
      attribute_list:
        description: "A list of attributes about the citation."
        type: array
        items:
          $ref: "#/definitions/Attribute"
      change:
        description: "Time in epoch format the citation record was last modified."
        type: number
        example: 1601335222
      confidence:
        description: "Indicator of the confidence in the information being cited."
        type: integer
        example: 4
      date:
        description: "The date of the citation."
        type: object
        items:
          $ref: "#/definitions/Date"
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/CitationExtended"
      gramps_id:
        description: "An alternate user managed identifier for the citation, usually but not guaranteed to be unique."
        type: string
        example: C0001
      handle:
        description: "The unique identifier for the citation."
        type: string
        example: e9027bf389921fb966e851abce5
      media_list:
        description: "A list of references to media associated with the citation."
        type: array
        items:
          $ref: "#/definitions/MediaReference"
      note_list:
        description: "A list of handles for research notes related to the citation."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      page:
        description: "The page in the source material being cited."
        type: string
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      source_handle:
        description: "The handle to the source record being cited from."
        type: string
        example: e9027bf39c36d6cdd041118852e
      tag_list:
        description: "A list of handles to tags associated with the citation."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e

##############################################################################
# Model - CitationExtended
##############################################################################

  CitationExtended:
    type: object
    properties:            
      media:
        description: "The media records for any referenced media objects."
        type: array
        items:
          $ref: "#/definitions/Media"
      notes:
        description: "The note records for any referenced notes."
        type: array
        items:
          $ref: "#/definitions/Note"
      source:
        description: "The source record for the citation."
        type: object
        items:
          $ref: "#/definitions/Source"    
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"

##############################################################################
# Model - Source
##############################################################################
    
  Source:
    type: object
    required:
      - handle
    properties:
      abbrev:
        description: "An abbreviated name for the source."
        type: string
        example: "1920 United States Federal Census"
      attribute_list:
        description: "A list of attributes about the source."
        type: array
        items:
          $ref: "#/definitions/Attribute"
      author:
        description: "The author of the source."
        type: string
      change:
        description: "Time in epoch format the source record was last modified."
        type: number
        example: 1601335222
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/SourceExtended"
      gramps_id:
        description: "An alternate user managed identifier for the source, usually but not guaranteed to be unique."
        type: string
        example: S0001
      handle:
        description: "The unique identifier for the source."
        type: string
        example: e9027bf389921fb966e851abce5
      media_list:
        description: "A list of references to media associated with the source."
        type: array
        items:
          $ref: "#/definitions/MediaReference"
      note_list:
        description: "A list of handles for research notes related to the source."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      pubinfo:
        description: "Publication information."
        type: string
      reporef_list:
        description: "A list of references to repositories the source can be found in."
        type: array
        items:
          $ref: "#/definitions/RepositoryReference"
      tag_list:
        description: "A list of handles to tags associated with the source."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e

##############################################################################
# Model - SourceExtended
##############################################################################

  SourceExtended:
    type: object
    properties:            
      media:
        description: "The media records for any referenced media objects."
        type: array
        items:
          $ref: "#/definitions/Media"
      notes:
        description: "The note records for any referenced notes."
        type: array
        items:
          $ref: "#/definitions/Note"
      repositories:
        description: "The repository records for any referenced repositories."
        type: array
        items:
          $ref: "#/definitions/Repository" 
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"

##############################################################################
# Model - Repository
##############################################################################
    
  Repository:
    type: object
    properties:
      address_list:
        description: "A list of addresses for the repository if available."
        type: array
        items:
          $ref: "#/definitions/Address"
      change:
        description: "Time in epoch format the repository record was last modified."
        type: number
        example: 1601335222
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/RepositoryExtended"
      gramps_id:
        description: "An alternate user managed identifier for the repository, usually but not guaranteed to be unique."
        type: string
        example: R0001
      handle:
        description: "The unique identifier for the repository."
        type: string
        example: e9027bf389921fb966e851abce5
      note_list:
        description: "A list of handles for research notes related to the repository."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      tag_list:
        description: "A list of handles to tags associated with the repository."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      type:
        description: "The type of repository."
        type: string
      urls:
        description: "A list of URLs associated with the repository."
        type: array
        items:
          $ref: "#/definitions/URL"

##############################################################################
# Model - RepositoryExtended
##############################################################################

  RepositoryExtended:
    type: object
    properties:            
      notes:
        description: "The note records for any referenced notes."
        type: array
        items:
          $ref: "#/definitions/Note"
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"

##############################################################################
# Model - RepositoryReference
##############################################################################
    
  RepositoryReference:
    type: object
    properties:
      call_number:
        description: "Call number for the source at the repository."
        type: string
      media_type:
        description: "The media source format at the repository."
        type: string
      note_list:
        description: "A list of handles for research notes related to the source at the repository."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      ref:
        description: "The handle of the repository referenced."
        type: string
        example: e9027bf389921fb966e851abce5

##############################################################################
# Model - Media
##############################################################################
    
  Media:
    type: object
    required:
      - handle
    properties:
      attribute_list:
        description: "A list of attributes about the media object."
        type: array
        items:
          $ref: "#/definitions/Attribute"
      change:
        description: "Time in epoch format the media object record was last modified."
        type: number
        example: 1601335222
      checksum:
        description: "A checksum for the media object for integrity validation."
        type: string
      citation_list:
        description: "A list of handles for citations supporting the media object."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      date:
        description: "The date associated with the media object."
        type: object
        items:
          $ref: "#/definitions/Date"
      description:
        description: "A description of the contents of the media object."
        type: string    
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/MediaExtended"
      gramps_id:
        description: "An alternate user managed identifier for the media object, usually but not guaranteed to be unique."
        type: string
        example: M0001
      handle:
        description: "The unique identifier for the media object."
        type: string
        example: e9027bf389921fb966e851abce5
      mime:
        description: "The format of the media object."
        type: string
        example: "image/jpeg"
      note_list:
        description: "A list of handles for research notes related to the media object."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      path:
        description: "The path to locate and load the media object from storage."
        type: string
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      tag_list:
        description: "A list of handles to tags associated with the media object."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      thumb:
        description: "TODO: Is this part of the JSON schema?"
        type: object

##############################################################################
# Model - MediaExtended
##############################################################################

  MediaExtended:
    type: object
    properties:            
      citations:
        description: "The citation records for any referenced citations."
        type: array
        items:
          $ref: "#/definitions/Citation"
      notes:
        description: "The note records for any referenced notes."
        type: array
        items:
          $ref: "#/definitions/Note"
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"

##############################################################################
# Model - MediaReference
##############################################################################

  MediaReference:
    type: object
    properties:
      attribute_list:
        description: "A list of attributes related to the media reference."
        type: array
        items:
          $ref: "#/definitions/Attribute"
      citation_list:
        description: "A list of handles for citations supporting the media reference."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      note_list:
        description: "A list of handles for research notes about the media reference."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      rect:
        description: "Rectangle."
        type: array
        items:
          type: number
        example: [10, 20, 30, 40]
      ref:
        description: "The handle of the media referenced."
        type: string
        example: e9027bf389921fb966e851abce5

##############################################################################
# Model - Note
##############################################################################
    
  Note:
    type: object
    required:
      - handle
    properties:
      change:
        description: "Time in epoch format the note record was last modified."
        type: number
        example: 1601335222
      extended:
        description: "An optional extended data section with the attributes for the referenced handles elsewhere in the response."
        type: object
        items:
          $ref: "#/definitions/NoteExtended"
      format:
        description: "Identifier for the note format."
        type: integer
      gramps_id:
        description: "An alternate user managed identifier for the note, usually but not guaranteed to be unique."
        type: string
        example: N0001
      handle:
        description: "The unique identifier for the note."
        type: string
        example: e9027bf389921fb966e851abce5
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      tag_list:
        description: "A list of handles to tags associated with the note."
        type: array
        items:
          type: string
        example:
          - e9027bf39c27be945fab9df8124
          - e9027bf39c36d6cdd046748852e
      text:
        description: "The note text."
        type: object
        items:
          $ref: "#/definitions/StyledText"
      type:
        description: "The type of note."
        type: string

##############################################################################
# Model - NoteExtended
##############################################################################

  NoteExtended:
    type: object
    properties:            
      tags:
        description: "The tag records for any referenced tags."
        type: array
        items:
          $ref: "#/definitions/Tag"
                    
##############################################################################
# Model - StyledText
##############################################################################
    
  StyledText:
    type: object
    properties:
      string:
        description: "The text itself."
        type: string
      tags:
        description: "The text tags."
        type: array
        items:
          $ref: "#/definitions/StyledTextTag"

##############################################################################
# Model - StyledTextTag
##############################################################################
    
  StyledTextTag:
    type: object
    properties:
      name:
        description: "Name of the tag."
        type: string
      value:
        description: "Value of the tag. Note type may be null, string, or integer."
        type: object
      ranges:
        description: "Ranges."
        type: array
        items:
          type: integer

##############################################################################
# Model - Tag
##############################################################################

  Tag:
    type: object
    properties:
      change:
        description: "Time in epoch format the tag record was last modified."
        type: number
        example: 1601335222
      color:
        description: "Color of the tag."
        type: string
        example: "#5c3566"
      name:
        description: "Tag name."
        type: string
        example: "Immigrant Ancestor"
      priority:
        description: "Priority of the tag."
        type: integer
        example: 1

##############################################################################
# Model - URL
##############################################################################

  URL:
    type: object
    properties:
      description:
        description: "Description of the URL."
        type: string
        example: "Person page on FamilySearch"
      path:
        description: "URL"
        type: string
        example: "https://www.familysearch.org/tree/person/details/AYFC-722"
      private:
        description: "Private object indicator."
        type: boolean
        example: true
      type:
        description: "Type of URL."
        type: string
        example: "Person"

##############################################################################
# Model - Translations
##############################################################################
    
  Translations:
    type: object
    properties:
      code:
        description: "The language code."
        type: string
        example: "fr"
      language:
        description: "The language name."
        type: string
        example: "French"

##############################################################################
# Model - Translation
##############################################################################
    
  Translation:
    type: object
    properties:
      original:
        description: "The original string."
        type: string
        example: death
      translation:
        description: "The translated string."
        type: string
        example: "décès"

##############################################################################
# Model - Relationship
##############################################################################
    
  Relationship:
    type: object
    properties:
      relationship_string:
        description: "Descriptive string describing the relationship."
        type: string
      distance_common_origin:
        description: "Number of generations to common ancestor, -1 if no common ancestor."
        type: integer
      distance_common_other:
        description: "Number of generations to other person in common, -1 if there is none."
        type: integer
      common_ancestors:
        description: "List of handles of common ancestors."
        type: array
        items:
          type: string

##############################################################################
# Model - TreeSummary
##############################################################################
    
  TreeSummary:
    type: object
    properties:
      Database module location:
        description: "The database module location."
        type: string
        example: "/usr/lib64/python3.8/sqlite3/__init__.py"
      Database module version:
        description: "The database module version."
        type: string
        example: "2.6.0"
      Database version:
        description: "The database version."
        type: string
        example: "3.33.0"
      Number of citations:
        description: "The number of citations in the database."
        type: number
        example: 149340
      Number of events:
        description: "The number of events in the database."
        type: number
        example: 60792
      Number of families:
        description: "The number of families in the database."
        type: number
        example: 6751
      Number of media:
        description: "The number of media items in the database."
        type: number
        example: 62225
      Number of notes:
        description: "The number of notes in the database."
        type: number
        example: 399178
      Number of people:
        description: "The number of people in the database."
        type: number
        example: 18232
      Number of places:
        description: "The number of places in the database."
        type: number
        example: 6716
      Number of repositories:
        description: "The number of repositories in the database."
        type: number
        example: 44
      Number of sources:
        description: "The number of sources in the database."
        type: number
        example: 1249
      Number of tags:
        description: "The number of tags in the database."
        type: number
        example: 16
      Schema version:
        description: "The data model schema version."
        type: string
        example: "18.0.0"

##############################################################################
# Model - TreeResearcher
##############################################################################
    
  TreeResearcher:
    type: object
    properties:
      addr:
        description: "Address."
        type: string
      city:
        description: "City."
        type: string
        example: "Newark"
      country:
        description: "Country."
        type: string
        example: "USA"
      county:
        description: "County."
        type: string
        example: "Essex"
      email:
        description: "Email address."
        type: string
        example: "noman@nowhere.com"
      locality:
        description: "Locality."
        type: string
      name:
        description: "Name of the researcher."
        type: string
        example: "Norris Man"
      phone:
        description: "Phone number."
        type: string
        example: "555-333-1111"
      postal:
        description: "Postal code."
        type: string
        example: "07105"
      state:
        description: "State."
        type: string
        example: "New Jersey"
      street:
        description: "Street."
        type: string
        example: "244 Speedway Lane"
